
config("pdfium_lib") {
  # TODO: CLEAN this up so that PDFium is included in project and remove hard coded path
  include_dirs = [ "../../../../pdfium" ]
  if (current_os == "wasm") {
    defines = ["SK_BUILD_FOR_WASM", "WASM_BUILD"]
    # if (is_debug) {
    #   ldfpdfium = "C:\Runtiva\temp\pdfium_wasm_trial\pdfium\out\wasm\obj\libpdfium.a"
    # } else {
    #   ldfpdfium = "C:\Runtiva\temp\pdfium_wasm_trial\pdfium\out\wasm-release\obj\libpdfium.a"
    # }

    #ldfpdfium,
    ldflags = [ "-s", "FETCH=1", "-s", "ASSERTIONS=1", "-s", "GL_ASSERTIONS=1", "-s", "DISABLE_EXCEPTION_CATCHING=2", "-s", "ERROR_ON_UNDEFINED_SYMBOLS=0", "-s", "INITIAL_MEMORY=67108864", "-s", "ALLOW_MEMORY_GROWTH=1", "--embed-file", "airplane.pdf"]
  } else {
    # if (is_debug) {
    #     libs = [
    #     "C:\Runtiva\temp\pdfium_wasm_trial\pdfium\out\component\pdfium.dll.lib", 
    #     "C:\Runtiva\temp\pdfium_wasm_trial\pdfium\out\component\obj\pdfium.lib",
    #     ]
    # } else {
    # libs = [
    #   #"C:\Runtiva\temp\pdfium_wasm_trial\pdfium\out\component-release\pdfium.dll.lib", 
    #   "C:\Runtiva\temp\pdfium_wasm_trial\pdfium\out\component-release\obj\pdfium.lib",
    #   ]
    # }
  }
}

# SDL  - requires different build steps depending on target_os
# config("sdl2") {
#   is_wasm = false
#     if (is_wasm) {
#         cflags = [ "-s", "USE_SDL=2" ]
#         ldflags = [ "-s", "USE_SDL=2" ]
#     } else if (current_os == "win") {
#         include_dirs = [ "SDL2/SDL2-2.0.12/include" ]
#         libs = [ "SDL2/SDL2-2.0.12/lib/x64/SDL2.lib", "SDL2/SDL2-2.0.12/lib/x64/SDL2main.lib", "Shell32.lib" ]
#     } else if (target_os == "linux") {
#         include_dirs = [ "SDL2/SDL2-2.0.12/include" ]
#         # TODO: Build SDL2 
#     }
# }

# config("sdl2_ttf") {
#   is_wasm = false
#     if (is_wasm) {
#         cflags = [ "-s", "USE_SDL_TTF=2" ]
#         ldflags = [ "-s", "USE_SDL_TTF=2" ]
#     } else if (current_os == "win") {
#         include_dirs = [ "SDL2_ttf/SDL2_ttf-2.0.15/include" ]
#         libs = [ "SDL2_ttf/SDL2_ttf-2.0.15/lib/x64/SDL2_ttf.lib" ]
#     } else if (target_os == "linux") {
#         include_dirs = [ "SDL2_ttf/SDL2_ttf-2.0.15/include" ]
#         # TODO: Build SDL2 
#     }
# }

# config("sdl2_image") {
#   is_wasm = false
#     if (is_wasm) {
#        #quote = "$0x22"
#        #img_formats = string_replace("SDL2_IMAGE_FORMATS=$0x22[$0x22$0x22png$0x22$0x22]$0x22", "\\\"", "$0x22")
#         #cflags = [ "-s", "USE_SDL_IMAGE=2", "-s", img_formats]#"SDL2_IMAGE_FORMATS='[$0x22$0x22png$0x22$0x22]'" ]
#         cflags = [ "-s", "USE_SDL_IMAGE=2", "-s", "SDL2_IMAGE_FORMATS=$0x22[$0x22$0x22png$0x22$0x22, $0x22$0x22pnm$0x22$0x22]$0x22" ]
#         ldflags = [ "-s", "USE_SDL_IMAGE=2", "-s", "SDL2_IMAGE_FORMATS=$0x22[$0x22$0x22png$0x22$0x22, $0x22$0x22pnm$0x22$0x22]$0x22" ]
#     } else if (current_os == "win") {
#         include_dirs = [ "SDL2_image/SDL2_image-2.0.5/include" ]
#         libs = [ "SDL2_image/SDL2_image-2.0.5/lib/x64/SDL2_image.lib" ]
#     } else if (target_os == "linux") {
#         include_dirs = [ "SDL2_image/SDL2_image-2.0.5/include" ]
#         # TODO: Build SDL2 
#     }
# }

# config("png") {
#   public_deps = [ ":libpng" ]
# }

# source_set("libpng") {
#   sources = [
#     "libpng16/png.c",
#     "libpng16/png.h",
#     "libpng16/pngconf.h",
#     "libpng16/pngdebug.h",
#     "libpng16/pngerror.c",
#     "libpng16/pngget.c",
#     "libpng16/pnginfo.h",
#     "libpng16/pnglibconf.h",
#     "libpng16/pngmem.c",
#     "libpng16/pngpread.c",
#     "libpng16/pngprefix.h",
#     "libpng16/pngpriv.h",
#     "libpng16/pngread.c",
#     "libpng16/pngrio.c",
#     "libpng16/pngrtran.c",
#     "libpng16/pngrutil.c",
#     "libpng16/pngset.c",
#     "libpng16/pngstruct.h",
#     "libpng16/pngtrans.c",
#     "libpng16/pngwio.c",
#     "libpng16/pngwrite.c",
#     "libpng16/pngwtran.c",
#     "libpng16/pngwutil.c",
#   ]

#   defines = []#"-Wno-tautological-constant-out-of-range-compare"]
#   cflags = ["-Wno-tautological-constant-out-of-range-compare"]
#   #deps = [ ":zlib" ]
#   configs += [":zlib_config", ":pdfium_lib"]
#   #deps = [":pdfium_lib"]

#   if (current_cpu == "x86" || current_cpu == "x64") {
#     sources += [
#       "libpng16/intel/filter_sse2_intrinsics.c",
#       "libpng16/intel/intel_init.c",
#     ]
#     defines += [ "PNG_INTEL_SSE_OPT=1" ]
#   } else if ((current_cpu == "arm" || current_cpu == "arm64") && arm_use_neon) {
#     sources += [
#       "libpng16/arm/arm_init.c",
#       "libpng16/arm/filter_neon_intrinsics.c",
#       "libpng16/arm/palette_neon_intrinsics.c",
#     ]
#     defines += [
#       "PNG_ARM_NEON_OPT=2",
#       "PNG_ARM_NEON_IMPLEMENTATION=1",
#     ]
#     configs -= [ "//build/config/compiler:default_optimization" ]
#     configs += [ "//build/config/compiler:optimize_speed" ]
#   } else if (current_cpu == "mips64el" && mips_use_msa) {
#     sources += [
#       "mips/filter_msa_intrinsics.c",
#       "mips/mips_init.c",
#     ]
#   }

#   if (is_win) {
#     # Unary minus applied to unsigned type.
#     cflags += [ "/wd4146" ]
#   }
# }

# config("zlib_config") {
#   include_dirs = [ "C:\Runtiva\temp\pdfium_wasm_trial\pdfium\third_party\zlib" ]
# }
